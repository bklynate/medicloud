package service;

import java.awt.PageAttributes.MediaType;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import model.Cdo;
import model.Observation;
import model.Person;
import repository.CdoRepo;
import repository.ObservationRepo;
import repository.PersonDao;


@RestController
@RequestMapping(value="/patient")
public class PatientService {
	
	public PatientService(){
		
	};
	
	@Autowired
	private CdoRepo cdoRepo;
	
	@RequestMapping(value="/api/cdo/{id}", method = RequestMethod.GET)
	public @ResponseBody Cdo getCdoById(@PathVariable("id") int id){
		
		Cdo p = cdoRepo.findByCdoId(id);
		
		return p;
		
	}
	@RequestMapping(value="/api/cdos", method =RequestMethod.GET)
	public Iterable<Cdo> getAllCDO(){
		return cdoRepo.findAll();
	}
	
	@RequestMapping(value="/api/")
	public Observation getAllObservation(){
		return null;
	}
	
	@Autowired
	private PersonDao personDao;
	@RequestMapping(value="/api/persons/{id}", method = RequestMethod.GET)
	public Person getPersonById(@PathVariable("id") int id){
		Person tempPerson = new Person();
		tempPerson =  personDao.findByPersonId(id);
		if(tempPerson.getPersonId() == id){
			@RequestMapping(method=RequestMethod.POST)
			public void setNewPatientOb(@RequestBody Observation newOB){
				obsRepo.save(newOB);
			}
		}
		return tempPerson;
	}
	
	@Autowired
	private ObservationRepo obsRepo;
	@RequestMapping(value="/api/persons/{id}/newobservation", method = RequestMethod.POST)
	public void setNewPatientObservation(@RequestBody Observation newObservation, @PathVariable("id") int id){
		obsRepo.save(newObservation);
		
	}
	
	@RequestMapping(value="/api/cdo", method=RequestMethod.POST)
	public void setCdo(@RequestBody Cdo c){
	
		cdoRepo.save(c);
	}
	
	
}
